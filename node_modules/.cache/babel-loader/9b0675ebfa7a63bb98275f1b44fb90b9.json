{"ast":null,"code":"var _jsxFileName = \"/home/hanh/react-quiz/src/components/QuestionList.js\";\nimport React, { Component } from 'react';\nimport { Button } from \"react-bootstrap\";\nimport Question from \"./Question\";\nimport PubSub from \"pubsub-js\";\nimport ooad from \"../questions/ooad/ooad\";\nimport { Pagination, PaginationItem, PaginationLink } from 'reactstrap';\n\nclass QuestionList extends Component {\n  constructor() {\n    super();\n\n    this.checkAnswer = () => {\n      PubSub.publish(\"SUMMIT_ANSWER\", 'submit_answer');\n    };\n\n    this.makeAllQuestions = () => {\n      const questions = [];\n\n      for (let value of Object.values(ooad)) {\n        questions.push(...value);\n      }\n\n      return questions;\n    };\n\n    this.dataSet = this.makeAllQuestions();\n    this.totalQuestions = this.dataSet.length;\n    this.pageSize = typeof this.pageSize === \"number\" ? this.pageSize : 15;\n    this.pagesCount = Math.ceil(this.totalQuestions / this.pageSize);\n    this.state = {\n      currentPage: 0\n    };\n  }\n\n  handleClick(e, index) {\n    e.preventDefault();\n    this.setState({\n      currentPage: index\n    });\n  }\n\n  // questionPerPage = (currentPage) => {\n  //     let questions = [];\n  //       if(currentPage === this.pagesCount - 1){\n  //             questions = this.dataSet.slice(currentPage * this.pageSize, this.totalQuestions)\n  //       }\n  //       else if(currentPage < this.pagesCount - 1 && currentPage >= 0){\n  //           questions = this.dataSet.slice(currentPage * this.pageSize, (currentPage + 1) * this.pageSize);\n  //       }\n  //       return questions;\n  // };\n  render() {\n    const questions = this.makeAllQuestions();\n    const {\n      currentPage\n    } = this.state; // this.first = this.currentPage * this.pageSize;\n    // if((this.currentPage + 1) * this.pageSize > this.totalQuestions)\n    //     this.last = this.totalQuestions;\n    // else\n    //     this.last = (this.currentPage + 1) * this.pageSize;\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"questions\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"questions\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }\n    }, questions.map((question, i) => {\n      return /*#__PURE__*/React.createElement(Question, {\n        key: i,\n        question: question,\n        index: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 33\n        }\n      });\n    }), /*#__PURE__*/React.createElement(Button, {\n      variant: \"primary\",\n      onClick: this.checkAnswer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 21\n      }\n    }, \"Submit\"), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 21\n      }\n    })));\n  }\n\n}\n\nexport default QuestionList;","map":{"version":3,"sources":["/home/hanh/react-quiz/src/components/QuestionList.js"],"names":["React","Component","Button","Question","PubSub","ooad","Pagination","PaginationItem","PaginationLink","QuestionList","constructor","checkAnswer","publish","makeAllQuestions","questions","value","Object","values","push","dataSet","totalQuestions","length","pageSize","pagesCount","Math","ceil","state","currentPage","handleClick","e","index","preventDefault","setState","render","map","question","i"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AAEA,SAAQC,MAAR,QAAqB,iBAArB;AAEA,OAAOC,QAAP,MAAqB,YAArB;AAEA,OAAOC,MAAP,MAAmB,WAAnB;AAEA,OAAOC,IAAP,MAAiB,wBAAjB;AAEA,SAASC,UAAT,EAAqBC,cAArB,EAAqCC,cAArC,QAA2D,YAA3D;;AAEA,MAAMC,YAAN,SAA2BR,SAA3B,CAAoC;AAChCS,EAAAA,WAAW,GAAG;AACV;;AADU,SAedC,WAfc,GAeA,MAAM;AAChBP,MAAAA,MAAM,CAACQ,OAAP,CAAe,eAAf,EAAgC,eAAhC;AACH,KAjBa;;AAAA,SAmBdC,gBAnBc,GAmBK,MAAM;AACrB,YAAMC,SAAS,GAAG,EAAlB;;AACA,WAAK,IAAIC,KAAT,IAAkBC,MAAM,CAACC,MAAP,CAAcZ,IAAd,CAAlB,EAAuC;AACnCS,QAAAA,SAAS,CAACI,IAAV,CAAe,GAAGH,KAAlB;AACH;;AACD,aAAOD,SAAP;AACH,KAzBa;;AAGV,SAAKK,OAAL,GAAe,KAAKN,gBAAL,EAAf;AACA,SAAKO,cAAL,GAAsB,KAAKD,OAAL,CAAaE,MAAnC;AACA,SAAKC,QAAL,GAAgB,OAAO,KAAKA,QAAZ,KAAyB,QAAzB,GAAoC,KAAKA,QAAzC,GAAoD,EAApE;AACA,SAAKC,UAAL,GAAkBC,IAAI,CAACC,IAAL,CAAU,KAAKL,cAAL,GAAsB,KAAKE,QAArC,CAAlB;AAEA,SAAKI,KAAL,GAAa;AAACC,MAAAA,WAAW,EAAE;AAAd,KAAb;AACH;;AAEDC,EAAAA,WAAW,CAACC,CAAD,EAAIC,KAAJ,EAAW;AAClBD,IAAAA,CAAC,CAACE,cAAF;AACA,SAAKC,QAAL,CAAc;AAACL,MAAAA,WAAW,EAAEG;AAAd,KAAd;AACH;;AAaD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEAG,EAAAA,MAAM,GAAG;AACL,UAAMnB,SAAS,GAAG,KAAKD,gBAAL,EAAlB;AACA,UAAM;AAAEc,MAAAA;AAAF,QAAkB,KAAKD,KAA7B,CAFK,CAGL;AACA;AACA;AACA;AACA;;AACA,wBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBA+CI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEQZ,SAAS,CAACoB,GAAV,CAAc,CAACC,QAAD,EAAWC,CAAX,KAAiB;AAC3B,0BACI,oBAAC,QAAD;AACI,QAAA,GAAG,EAAEA,CADT;AAEI,QAAA,QAAQ,EAAED,QAFd;AAGI,QAAA,KAAK,EAAEC,CAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAOH,KARD,CAFR,eAYI,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,SAAhB;AAA0B,MAAA,OAAO,EAAE,KAAKzB,WAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAZJ,eAaI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAbJ,CA/CJ,CADJ;AAiEH;;AAhH+B;;AAmHpC,eAAeF,YAAf","sourcesContent":["import React, {Component} from 'react';\n\nimport {Button} from \"react-bootstrap\";\n\nimport Question from \"./Question\";\n\nimport PubSub from \"pubsub-js\";\n\nimport ooad from \"../questions/ooad/ooad\";\n\nimport { Pagination, PaginationItem, PaginationLink } from 'reactstrap';\n\nclass QuestionList extends Component{\n    constructor() {\n        super();\n\n        this.dataSet = this.makeAllQuestions();\n        this.totalQuestions = this.dataSet.length;\n        this.pageSize = typeof this.pageSize === \"number\" ? this.pageSize : 15;\n        this.pagesCount = Math.ceil(this.totalQuestions / this.pageSize);\n\n        this.state = {currentPage: 0};\n    }\n\n    handleClick(e, index) {\n        e.preventDefault();\n        this.setState({currentPage: index});\n    }\n    checkAnswer = () => {\n        PubSub.publish(\"SUMMIT_ANSWER\", 'submit_answer')\n    };\n\n    makeAllQuestions = () => {\n        const questions = [];\n        for (let value of Object.values(ooad)) {\n            questions.push(...value)\n        }\n        return questions\n    };\n\n    // questionPerPage = (currentPage) => {\n    //     let questions = [];\n    //       if(currentPage === this.pagesCount - 1){\n    //             questions = this.dataSet.slice(currentPage * this.pageSize, this.totalQuestions)\n    //       }\n    //       else if(currentPage < this.pagesCount - 1 && currentPage >= 0){\n    //           questions = this.dataSet.slice(currentPage * this.pageSize, (currentPage + 1) * this.pageSize);\n    //       }\n    //       return questions;\n    // };\n\n    render() {\n        const questions = this.makeAllQuestions();\n        const { currentPage } = this.state;\n        // this.first = this.currentPage * this.pageSize;\n        // if((this.currentPage + 1) * this.pageSize > this.totalQuestions)\n        //     this.last = this.totalQuestions;\n        // else\n        //     this.last = (this.currentPage + 1) * this.pageSize;\n        return (\n            <div className=\"questions\">\n                {/*<div className=\"pagination-wrapper\">*/}\n                {/*    <Pagination aria-label=\"Page navigation example\">*/}\n                {/*        <PaginationItem disabled={currentPage <= 0}>*/}\n                {/*            <PaginationLink*/}\n                {/*                onClick={e => this.handleClick(e, currentPage - 1)}*/}\n                {/*                previous*/}\n                {/*                href=\"#\"*/}\n                {/*            />*/}\n                {/*        </PaginationItem>*/}\n\n                {/*        {[...Array(this.pagesCount)].map((page, i) =>*/}\n                {/*            <PaginationItem active={i === currentPage} key={i}>*/}\n                {/*                <PaginationLink onClick={e => this.handleClick(e,i)} href=\"#\">*/}\n                {/*                    {i + 1}*/}\n                {/*                </PaginationLink>*/}\n                {/*            </PaginationItem>*/}\n                {/*        )}*/}\n\n                {/*        <PaginationItem disabled={currentPage >= this.pagesCount - 1}>*/}\n                {/*            <PaginationLink*/}\n                {/*                onClick={e => this.handleClick(e, currentPage + 1)}*/}\n                {/*                next*/}\n                {/*                href=\"#\"*/}\n                {/*            />*/}\n                {/*        </PaginationItem>*/}\n\n                {/*    </Pagination>*/}\n                {/*</div>*/}\n                {/*{*/}\n                {/*    // this.dataSet.slice(currentPage * this.pageSize, (currentPage + 1) * this.pageSize)*/}\n                {/*    // const questions = this.dataSet.questionPerPage(currentPage);*/}\n                {/*    this.dataSet.slice(this.first, this.last)*/}\n                {/*    .map((question, i) => {*/}\n                {/*            return (*/}\n                {/*                <Question*/}\n                {/*                    key={i}*/}\n                {/*                    question={question}*/}\n                {/*                    index={i}*/}\n                {/*                />*/}\n                {/*            )*/}\n                {/*        })*/}\n                {/*}*/}\n                {/*<Button variant=\"primary\" onClick={this.checkAnswer}>Submit</Button>*/}\n                {/*<hr />*/}\n\n\n                <div className=\"questions\">\n                    {\n                        questions.map((question, i) => {\n                            return (\n                                <Question\n                                    key={i}\n                                    question={question}\n                                    index={i}\n                                />\n                            )\n                        })\n                    }\n                    <Button variant=\"primary\" onClick={this.checkAnswer}>Submit</Button>\n                    <hr />\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default QuestionList;\n"]},"metadata":{},"sourceType":"module"}