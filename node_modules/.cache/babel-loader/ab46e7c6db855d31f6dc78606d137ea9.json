{"ast":null,"code":"var _jsxFileName = \"/home/hanh/react-quiz/src/components/QuestionList.js\";\nimport React, { Component } from 'react';\nimport { Button } from \"react-bootstrap\";\nimport Question from \"./Question\";\nimport PubSub from \"pubsub-js\";\nimport ooad from \"../questions/ooad/ooad\";\nimport { Pagination, PaginationItem, PaginationLink } from 'reactstrap';\n\nclass QuestionList extends Component {\n  constructor() {\n    super();\n\n    this.checkAnswer = () => {\n      PubSub.publish(\"SUMMIT_ANSWER\", 'submit_answer');\n    };\n\n    this.makeAllQuestions = () => {\n      const questions = [];\n\n      for (let value of Object.values(ooad)) {\n        questions.push(...value);\n      }\n\n      return questions;\n    };\n\n    this.questionPerPage = currentPage => {\n      if (currentPage === this.pagesCount - 1) {\n        this.dataSet.slice(currentPage * this.pageSize, this.totalQuestions);\n      } else if (currentPage < this.pagesCount - 1 && currentPage >= 0) {\n        this.dataSet.slice(currentPage * this.pageSize, (currentPage + 1) * this.pageSize);\n      } // return this.dataSet;\n\n    };\n\n    this.dataSet = this.makeAllQuestions();\n    this.totalQuestions = this.dataSet.length;\n    this.pageSize = typeof this.pageSize === \"number\" ? this.pageSize : 15;\n    this.pagesCount = Math.ceil(this.totalQuestions / this.pageSize);\n    this.state = {\n      currentPage: 0\n    };\n  }\n\n  handleClick(e, index) {\n    e.preventDefault();\n    this.setState({\n      currentPage: index\n    });\n  }\n\n  render() {\n    // const questions = this.makeAllQuestions();\n    const {\n      currentPage\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"questions\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"pagination-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Pagination, {\n      \"aria-label\": \"Page navigation example\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(PaginationItem, {\n      disabled: currentPage <= 0,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(PaginationLink, {\n      onClick: e => this.handleClick(e, currentPage - 1),\n      previous: true,\n      href: \"#\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 29\n      }\n    })), [...Array(this.pagesCount)].map((page, i) => /*#__PURE__*/React.createElement(PaginationItem, {\n      active: i === currentPage,\n      key: i,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(PaginationLink, {\n      onClick: e => this.handleClick(e, i),\n      href: \"#\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 33\n      }\n    }, i + 1))), /*#__PURE__*/React.createElement(PaginationItem, {\n      disabled: currentPage >= this.pagesCount - 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(PaginationLink, {\n      onClick: e => this.handleClick(e, currentPage + 1),\n      next: true,\n      href: \"#\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 29\n      }\n    })))), // this.dataSet.slice(currentPage * this.pageSize, (currentPage + 1) * this.pageSize)\n    this.dataSet = this.dataSet.questionPerPage(currentPage).map((question, i) => {\n      return /*#__PURE__*/React.createElement(Question, {\n        key: i,\n        question: question,\n        index: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 33\n        }\n      });\n    }), /*#__PURE__*/React.createElement(Button, {\n      variant: \"primary\",\n      onClick: this.checkAnswer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }\n    }, \"Submit\"), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nexport default QuestionList;","map":{"version":3,"sources":["/home/hanh/react-quiz/src/components/QuestionList.js"],"names":["React","Component","Button","Question","PubSub","ooad","Pagination","PaginationItem","PaginationLink","QuestionList","constructor","checkAnswer","publish","makeAllQuestions","questions","value","Object","values","push","questionPerPage","currentPage","pagesCount","dataSet","slice","pageSize","totalQuestions","length","Math","ceil","state","handleClick","e","index","preventDefault","setState","render","Array","map","page","i","question"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\n\nimport {Button} from \"react-bootstrap\";\n\nimport Question from \"./Question\";\n\nimport PubSub from \"pubsub-js\";\n\nimport ooad from \"../questions/ooad/ooad\";\n\nimport { Pagination, PaginationItem, PaginationLink } from 'reactstrap';\n\nclass QuestionList extends Component{\n    constructor() {\n        super();\n\n        this.dataSet = this.makeAllQuestions();\n        this.totalQuestions = this.dataSet.length;\n        this.pageSize = typeof this.pageSize === \"number\" ? this.pageSize : 15;\n        this.pagesCount = Math.ceil(this.totalQuestions / this.pageSize);\n\n        this.state = {currentPage: 0};\n    }\n\n    handleClick(e, index) {\n        e.preventDefault();\n        this.setState({currentPage: index});\n    }\n    checkAnswer = () => {\n        PubSub.publish(\"SUMMIT_ANSWER\", 'submit_answer')\n    };\n\n    makeAllQuestions = () => {\n        const questions = [];\n        for (let value of Object.values(ooad)) {\n            questions.push(...value)\n        }\n        return questions\n    };\n\n    questionPerPage = (currentPage) => {\n          if(currentPage === this.pagesCount - 1){\n                this.dataSet.slice(currentPage * this.pageSize, this.totalQuestions)\n          }\n          else if(currentPage < this.pagesCount - 1 && currentPage >= 0){\n              this.dataSet.slice(currentPage * this.pageSize, (currentPage + 1) * this.pageSize);\n          }\n          // return this.dataSet;\n    };\n\n    render() {\n        // const questions = this.makeAllQuestions();\n        const { currentPage } = this.state;\n        return (\n            <div className=\"questions\">\n                <div className=\"pagination-wrapper\">\n                    <Pagination aria-label=\"Page navigation example\">\n                        <PaginationItem disabled={currentPage <= 0}>\n                            <PaginationLink\n                                onClick={e => this.handleClick(e, currentPage - 1)}\n                                previous\n                                href=\"#\"\n                            />\n                        </PaginationItem>\n\n                        {[...Array(this.pagesCount)].map((page, i) =>\n                            <PaginationItem active={i === currentPage} key={i}>\n                                <PaginationLink onClick={e => this.handleClick(e,i)} href=\"#\">\n                                    {i + 1}\n                                </PaginationLink>\n                            </PaginationItem>\n                        )}\n\n                        <PaginationItem disabled={currentPage >= this.pagesCount - 1}>\n                            <PaginationLink\n                                onClick={e => this.handleClick(e, currentPage + 1)}\n                                next\n                                href=\"#\"\n                            />\n                        </PaginationItem>\n\n                    </Pagination>\n                </div>\n                {\n                    // this.dataSet.slice(currentPage * this.pageSize, (currentPage + 1) * this.pageSize)\n                    this.dataSet = this.dataSet.questionPerPage(currentPage)\n                    .map((question, i) => {\n                            return (\n                                <Question\n                                    key={i}\n                                    question={question}\n                                    index={i}\n                                />\n                            )\n                        })\n                }\n                <Button variant=\"primary\" onClick={this.checkAnswer}>Submit</Button>\n                <hr />\n                {/*<div className=\"questions\">*/}\n                {/*    {*/}\n                {/*        questions.map((question, i) => {*/}\n                {/*            return (*/}\n                {/*                <Question*/}\n                {/*                    key={i}*/}\n                {/*                    question={question}*/}\n                {/*                    index={i}*/}\n                {/*                />*/}\n                {/*            )*/}\n                {/*        })*/}\n                {/*    }*/}\n                {/*    <Button variant=\"primary\" onClick={this.checkAnswer}>Submit</Button>*/}\n                {/*    <hr />*/}\n                {/*</div>*/}\n            </div>\n        );\n    }\n}\n\nexport default QuestionList;\n"]},"metadata":{},"sourceType":"module"}